%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Friday, February 28, 2014 11:15:53 AM MST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
0 0.501961 0.701961 RG
23.1000 -1.00000 367.900 341.000 rc
newpath
376.836 337.684 m
389.000 337.684 l
389.000 339.000 l
376.836 339.000 l
376.836 337.684 l
h
f
0 0 0 RG
newpath
376.836 337.684 m
389.000 337.684 l
389.000 339.000 l
376.836 339.000 l
376.836 337.684 l
h
S
0 0.501961 0.701961 RG
newpath
352.510 337.684 m
364.673 337.684 l
364.673 339.000 l
352.510 339.000 l
352.510 337.684 l
h
f
0 0 0 RG
newpath
352.510 337.684 m
364.673 337.684 l
364.673 339.000 l
352.510 339.000 l
352.510 337.684 l
h
S
0 0.501961 0.701961 RG
newpath
303.856 332.424 m
316.020 332.424 l
316.020 339.000 l
303.856 339.000 l
303.856 332.424 l
h
f
0 0 0 RG
newpath
303.856 332.424 m
316.020 332.424 l
316.020 339.000 l
303.856 339.000 l
303.856 332.424 l
h
S
0 0.501961 0.701961 RG
newpath
316.020 337.684 m
328.183 337.684 l
328.183 339.000 l
316.020 339.000 l
316.020 337.684 l
h
f
0 0 0 RG
newpath
316.020 337.684 m
328.183 337.684 l
328.183 339.000 l
316.020 339.000 l
316.020 337.684 l
h
S
0 0.501961 0.701961 RG
newpath
255.203 315.326 m
267.366 315.326 l
267.366 339.000 l
255.203 339.000 l
255.203 315.326 l
h
f
0 0 0 RG
newpath
255.203 315.326 m
267.366 315.326 l
267.366 339.000 l
255.203 339.000 l
255.203 315.326 l
h
S
0 0.501961 0.701961 RG
newpath
267.366 319.272 m
279.530 319.272 l
279.530 339.000 l
267.366 339.000 l
267.366 319.272 l
h
f
0 0 0 RG
newpath
267.366 319.272 m
279.530 319.272 l
279.530 339.000 l
267.366 339.000 l
267.366 319.272 l
h
S
0 0.501961 0.701961 RG
newpath
206.550 221.949 m
218.713 221.949 l
218.713 339.000 l
206.550 339.000 l
206.550 221.949 l
h
f
0 0 0 RG
newpath
206.550 221.949 m
218.713 221.949 l
218.713 339.000 l
206.550 339.000 l
206.550 221.949 l
h
S
0 0.501961 0.701961 RG
newpath
218.713 242.992 m
230.876 242.992 l
230.876 339.000 l
218.713 339.000 l
218.713 242.992 l
h
f
0 0 0 RG
newpath
218.713 242.992 m
230.876 242.992 l
230.876 339.000 l
218.713 339.000 l
218.713 242.992 l
h
S
0 0.501961 0.701961 RG
newpath
230.876 270.610 m
243.040 270.610 l
243.040 339.000 l
230.876 339.000 l
230.876 270.610 l
h
f
0 0 0 RG
newpath
230.876 270.610 m
243.040 270.610 l
243.040 339.000 l
230.876 339.000 l
230.876 270.610 l
h
S
0 0.501961 0.701961 RG
newpath
243.040 286.393 m
255.203 286.393 l
255.203 339.000 l
243.040 339.000 l
243.040 286.393 l
h
f
0 0 0 RG
newpath
243.040 286.393 m
255.203 286.393 l
255.203 339.000 l
243.040 339.000 l
243.040 286.393 l
h
S
0 0.501961 0.701961 RG
newpath
279.530 327.163 m
291.693 327.163 l
291.693 339.000 l
279.530 339.000 l
279.530 327.163 l
h
f
0 0 0 RG
newpath
279.530 327.163 m
291.693 327.163 l
291.693 339.000 l
279.530 339.000 l
279.530 327.163 l
h
S
0 0.501961 0.701961 RG
newpath
291.693 327.163 m
303.856 327.163 l
303.856 339.000 l
291.693 339.000 l
291.693 327.163 l
h
f
0 0 0 RG
newpath
291.693 327.163 m
303.856 327.163 l
303.856 339.000 l
291.693 339.000 l
291.693 327.163 l
h
S
0 0.501961 0.701961 RG
newpath
24.1000 337.684 m
36.2633 337.684 l
36.2633 339.000 l
24.1000 339.000 l
24.1000 337.684 l
h
f
0 0 0 RG
newpath
24.1000 337.684 m
36.2633 337.684 l
36.2633 339.000 l
24.1000 339.000 l
24.1000 337.684 l
h
S
0 0.501961 0.701961 RG
newpath
36.2633 316.642 m
48.4266 316.642 l
48.4266 339.000 l
36.2633 339.000 l
36.2633 316.642 l
h
f
0 0 0 RG
newpath
36.2633 316.642 m
48.4266 316.642 l
48.4266 339.000 l
36.2633 339.000 l
36.2633 316.642 l
h
S
0 0.501961 0.701961 RG
newpath
48.4266 275.871 m
60.5900 275.871 l
60.5900 339.000 l
48.4266 339.000 l
48.4266 275.871 l
h
f
0 0 0 RG
newpath
48.4266 275.871 m
60.5900 275.871 l
60.5900 339.000 l
48.4266 339.000 l
48.4266 275.871 l
h
S
0 0.501961 0.701961 RG
newpath
60.5900 240.361 m
72.7533 240.361 l
72.7533 339.000 l
60.5900 339.000 l
60.5900 240.361 l
h
f
0 0 0 RG
newpath
60.5900 240.361 m
72.7533 240.361 l
72.7533 339.000 l
60.5900 339.000 l
60.5900 240.361 l
h
S
0 0.501961 0.701961 RG
newpath
72.7533 158.821 m
84.9166 158.821 l
84.9166 339.000 l
72.7533 339.000 l
72.7533 158.821 l
h
f
0 0 0 RG
newpath
72.7533 158.821 m
84.9166 158.821 l
84.9166 339.000 l
72.7533 339.000 l
72.7533 158.821 l
h
S
0 0.501961 0.701961 RG
newpath
84.9166 132.517 m
97.0800 132.517 l
97.0800 339.000 l
84.9166 339.000 l
84.9166 132.517 l
h
f
0 0 0 RG
newpath
84.9166 132.517 m
97.0800 132.517 l
97.0800 339.000 l
84.9166 339.000 l
84.9166 132.517 l
h
S
0 0.501961 0.701961 RG
newpath
97.0800 99.6381 m
109.243 99.6381 l
109.243 339.000 l
97.0800 339.000 l
97.0800 99.6381 l
h
f
0 0 0 RG
newpath
97.0800 99.6381 m
109.243 99.6381 l
109.243 339.000 l
97.0800 339.000 l
97.0800 99.6381 l
h
S
0 0.501961 0.701961 RG
newpath
109.243 1.00000 m
121.406 1.00000 l
121.406 339.000 l
109.243 339.000 l
109.243 1.00000 l
h
f
0 0 0 RG
newpath
109.243 1.00000 m
121.406 1.00000 l
121.406 339.000 l
109.243 339.000 l
109.243 1.00000 l
h
S
0 0.501961 0.701961 RG
newpath
121.406 2.31518 m
133.570 2.31518 l
133.570 339.000 l
121.406 339.000 l
121.406 2.31518 l
h
f
0 0 0 RG
newpath
121.406 2.31518 m
133.570 2.31518 l
133.570 339.000 l
121.406 339.000 l
121.406 2.31518 l
h
S
0 0.501961 0.701961 RG
newpath
133.570 10.2062 m
145.733 10.2062 l
145.733 339.000 l
133.570 339.000 l
133.570 10.2062 l
h
f
0 0 0 RG
newpath
133.570 10.2062 m
145.733 10.2062 l
145.733 339.000 l
133.570 339.000 l
133.570 10.2062 l
h
S
0 0.501961 0.701961 RG
newpath
145.733 73.3346 m
157.896 73.3346 l
157.896 339.000 l
145.733 339.000 l
145.733 73.3346 l
h
f
0 0 0 RG
newpath
145.733 73.3346 m
157.896 73.3346 l
157.896 339.000 l
145.733 339.000 l
145.733 73.3346 l
h
S
0 0.501961 0.701961 RG
newpath
157.896 65.4435 m
170.060 65.4435 l
170.060 339.000 l
157.896 339.000 l
157.896 65.4435 l
h
f
0 0 0 RG
newpath
157.896 65.4435 m
170.060 65.4435 l
170.060 339.000 l
157.896 339.000 l
157.896 65.4435 l
h
S
0 0.501961 0.701961 RG
newpath
170.060 140.408 m
182.223 140.408 l
182.223 339.000 l
170.060 339.000 l
170.060 140.408 l
h
f
0 0 0 RG
newpath
170.060 140.408 m
182.223 140.408 l
182.223 339.000 l
170.060 339.000 l
170.060 140.408 l
h
S
0 0.501961 0.701961 RG
newpath
182.223 170.657 m
194.386 170.657 l
194.386 339.000 l
182.223 339.000 l
182.223 170.657 l
h
f
0 0 0 RG
newpath
182.223 170.657 m
194.386 170.657 l
194.386 339.000 l
182.223 339.000 l
182.223 170.657 l
h
S
0 0.501961 0.701961 RG
newpath
194.386 182.494 m
206.550 182.494 l
206.550 339.000 l
194.386 339.000 l
194.386 182.494 l
h
f
0 0 0 RG
newpath
194.386 182.494 m
206.550 182.494 l
206.550 339.000 l
194.386 339.000 l
194.386 182.494 l
h
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
24.1000 339.000 m
389.000 339.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
155 361 103 28 rc
newpath
165.877 369.841 m
165.877 373.276 l
165.606 373.276 l
165.518 372.617 165.361 372.092 165.134 371.701  c
164.907 371.311 164.583 371.001 164.163 370.771  c
163.743 370.542 163.309 370.427 162.859 370.427  c
162.352 370.427 161.932 370.582 161.600 370.892  c
161.268 371.202 161.102 371.555 161.102 371.950  c
161.102 372.253 161.207 372.529 161.417 372.778  c
161.719 373.144 162.439 373.632 163.577 374.243  c
164.505 374.741 165.138 375.123 165.478 375.389  c
165.817 375.655 166.078 375.969 166.262 376.330  c
166.445 376.691 166.536 377.070 166.536 377.465  c
166.536 378.217 166.244 378.866 165.661 379.410  c
165.077 379.954 164.327 380.227 163.409 380.227  c
163.121 380.227 162.850 380.205 162.596 380.161  c
162.444 380.136 162.131 380.047 161.655 379.893  c
161.179 379.740 160.877 379.663 160.750 379.663  c
160.628 379.663 160.532 379.699 160.461 379.772  c
160.390 379.846 160.337 379.997 160.303 380.227  c
160.032 380.227 l
160.032 376.821 l
160.303 376.821 l
160.430 377.534 160.601 378.067 160.816 378.421  c
161.031 378.775 161.359 379.069 161.801 379.304  c
162.243 379.538 162.728 379.655 163.255 379.655  c
163.865 379.655 164.347 379.494 164.701 379.172  c
165.055 378.850 165.232 378.469 165.232 378.029  c
165.232 377.785 165.165 377.539 165.031 377.290  c
164.897 377.041 164.688 376.809 164.405 376.594  c
164.214 376.447 163.694 376.136 162.845 375.660  c
161.995 375.184 161.391 374.804 161.032 374.521  c
160.673 374.238 160.401 373.925 160.215 373.584  c
160.030 373.242 159.937 372.866 159.937 372.456  c
159.937 371.743 160.210 371.129 160.757 370.614  c
161.304 370.098 162.000 369.841 162.845 369.841  c
163.372 369.841 163.931 369.970 164.522 370.229  c
164.795 370.351 164.988 370.412 165.101 370.412  c
165.228 370.412 165.331 370.374 165.412 370.299  c
165.492 370.223 165.557 370.070 165.606 369.841  c
h
166.985 373.957 m
169.050 373.122 l
169.329 373.122 l
169.329 374.689 l
169.675 374.099 170.023 373.685 170.372 373.448  c
170.721 373.211 171.089 373.093 171.475 373.093  c
172.148 373.093 172.710 373.356 173.159 373.884  c
173.711 374.528 173.987 375.368 173.987 376.403  c
173.987 377.561 173.655 378.518 172.991 379.274  c
172.444 379.895 171.755 380.205 170.925 380.205  c
170.564 380.205 170.252 380.153 169.988 380.051  c
169.793 379.978 169.573 379.831 169.329 379.611  c
169.329 381.655 l
169.329 382.114 169.357 382.406 169.413 382.530  c
169.469 382.655 169.567 382.753 169.706 382.827  c
169.845 382.900 170.098 382.937 170.464 382.937  c
170.464 383.208 l
166.948 383.208 l
166.948 382.937 l
167.131 382.937 l
167.400 382.941 167.629 382.890 167.820 382.783  c
167.913 382.729 167.985 382.642 168.036 382.523  c
168.087 382.403 168.113 382.099 168.113 381.611  c
168.113 375.268 l
168.113 374.834 168.093 374.558 168.054 374.440  c
168.015 374.323 167.953 374.235 167.867 374.177  c
167.782 374.118 167.666 374.089 167.520 374.089  c
167.402 374.089 167.253 374.123 167.073 374.191  c
h
169.329 375.122 m
169.329 377.627 l
169.329 378.168 169.351 378.525 169.395 378.696  c
169.463 378.979 169.630 379.228 169.896 379.443  c
170.162 379.658 170.498 379.765 170.903 379.765  c
171.392 379.765 171.787 379.575 172.090 379.194  c
172.485 378.696 172.683 377.995 172.683 377.092  c
172.683 376.066 172.459 375.278 172.009 374.726  c
171.697 374.345 171.326 374.155 170.896 374.155  c
170.662 374.155 170.430 374.213 170.200 374.331  c
170.024 374.418 169.734 374.682 169.329 375.122  c
h
176.596 375.817 m
176.591 376.814 176.833 377.595 177.321 378.161  c
177.810 378.728 178.383 379.011 179.043 379.011  c
179.482 379.011 179.864 378.890 180.189 378.648  c
180.513 378.407 180.786 377.993 181.005 377.407  c
181.232 377.553 l
181.130 378.222 180.832 378.831 180.339 379.381  c
179.846 379.930 179.228 380.205 178.486 380.205  c
177.680 380.205 176.991 379.891 176.417 379.263  c
175.843 378.636 175.556 377.793 175.556 376.733  c
175.556 375.585 175.850 374.691 176.439 374.049  c
177.027 373.407 177.766 373.085 178.654 373.085  c
179.406 373.085 180.024 373.333 180.507 373.829  c
180.991 374.325 181.232 374.987 181.232 375.817  c
h
176.596 375.393 m
179.702 375.393 l
179.677 374.963 179.626 374.660 179.548 374.484  c
179.426 374.211 179.244 373.996 179.002 373.840  c
178.761 373.684 178.508 373.606 178.244 373.606  c
177.839 373.606 177.476 373.763 177.157 374.078  c
176.837 374.393 176.650 374.831 176.596 375.393  c
h
183.596 375.817 m
183.591 376.814 183.833 377.595 184.321 378.161  c
184.810 378.728 185.383 379.011 186.043 379.011  c
186.482 379.011 186.864 378.890 187.189 378.648  c
187.513 378.407 187.786 377.993 188.005 377.407  c
188.232 377.553 l
188.130 378.222 187.832 378.831 187.339 379.381  c
186.846 379.930 186.228 380.205 185.486 380.205  c
184.680 380.205 183.991 379.891 183.417 379.263  c
182.843 378.636 182.556 377.793 182.556 376.733  c
182.556 375.585 182.850 374.691 183.439 374.049  c
184.027 373.407 184.766 373.085 185.654 373.085  c
186.406 373.085 187.024 373.333 187.507 373.829  c
187.991 374.325 188.232 374.987 188.232 375.817  c
h
183.596 375.393 m
186.702 375.393 l
186.677 374.963 186.626 374.660 186.548 374.484  c
186.426 374.211 186.244 373.996 186.002 373.840  c
185.761 373.684 185.508 373.606 185.244 373.606  c
184.839 373.606 184.476 373.763 184.157 374.078  c
183.837 374.393 183.650 374.831 183.596 375.393  c
h
194.207 379.245 m
193.880 379.587 193.560 379.832 193.248 379.981  c
192.935 380.130 192.598 380.205 192.237 380.205  c
191.504 380.205 190.865 379.898 190.318 379.285  c
189.771 378.673 189.498 377.885 189.498 376.923  c
189.498 375.961 189.800 375.081 190.406 374.283  c
191.011 373.485 191.790 373.085 192.742 373.085  c
193.333 373.085 193.821 373.273 194.207 373.649  c
194.207 372.412 l
194.207 371.645 194.189 371.174 194.152 370.998  c
194.116 370.822 194.058 370.703 193.980 370.639  c
193.902 370.576 193.804 370.544 193.687 370.544  c
193.560 370.544 193.392 370.583 193.182 370.661  c
193.086 370.405 l
195.086 369.585 l
195.416 369.585 l
195.416 377.341 l
195.416 378.127 195.434 378.607 195.470 378.780  c
195.507 378.953 195.566 379.074 195.646 379.143  c
195.727 379.211 195.821 379.245 195.928 379.245  c
196.060 379.245 196.236 379.204 196.456 379.121  c
196.536 379.377 l
194.544 380.205 l
194.207 380.205 l
h
194.207 378.732 m
194.207 375.275 l
194.178 374.943 194.090 374.641 193.943 374.367  c
193.797 374.094 193.603 373.887 193.361 373.748  c
193.119 373.609 192.884 373.540 192.654 373.540  c
192.225 373.540 191.841 373.732 191.504 374.118  c
191.060 374.626 190.838 375.368 190.838 376.345  c
190.838 377.331 191.053 378.087 191.482 378.612  c
191.912 379.137 192.391 379.399 192.918 379.399  c
193.362 379.399 193.792 379.177 194.207 378.732  c
h
f
newpath
201.322 373.825 m
203.439 373.371 l
203.590 373.732 203.712 374.101 203.805 374.477  c
203.937 375.029 204.044 375.683 204.127 376.440  c
204.166 376.821 204.220 377.627 204.288 378.857  c
204.898 378.183 205.262 377.766 205.379 377.605  c
206.024 376.731 206.395 376.218 206.493 376.066  c
206.654 375.808 206.766 375.581 206.830 375.385  c
206.883 375.239 206.910 375.100 206.910 374.968  c
206.910 374.841 206.797 374.694 206.570 374.528  c
206.343 374.362 206.229 374.177 206.229 373.972  c
206.229 373.815 206.291 373.676 206.416 373.554  c
206.540 373.432 206.688 373.371 206.859 373.371  c
207.064 373.371 207.245 373.455 207.401 373.624  c
207.557 373.792 207.635 374.001 207.635 374.250  c
207.635 374.499 207.596 374.738 207.518 374.968  c
207.391 375.339 207.154 375.792 206.808 376.326  c
206.461 376.861 205.902 377.578 205.130 378.476  c
205.033 378.588 204.491 379.155 203.504 380.175  c
203.233 380.175 l
203.116 377.085 202.872 375.156 202.501 374.389  c
202.379 374.140 202.176 374.016 201.893 374.016  c
201.771 374.016 201.598 374.038 201.373 374.082  c
h
f
newpath
208.433 382.074 m
208.433 381.168 208.570 380.387 208.843 379.733  c
209.117 379.079 209.480 378.591 209.933 378.271  c
210.285 378.017 210.648 377.890 211.023 377.890  c
211.632 377.890 212.179 378.201 212.664 378.822  c
213.269 379.591 213.572 380.634 213.572 381.951  c
213.572 382.873 213.439 383.656 213.173 384.300  c
212.908 384.945 212.569 385.413 212.157 385.704  c
211.745 385.995 211.347 386.140 210.964 386.140  c
210.207 386.140 209.576 385.693 209.072 384.798  c
208.646 384.044 208.433 383.136 208.433 382.074  c
h
209.582 382.220 m
209.582 383.314 209.716 384.207 209.986 384.898  c
210.209 385.480 210.541 385.771 210.982 385.771  c
211.193 385.771 211.412 385.676 211.638 385.487  c
211.865 385.297 212.037 384.980 212.154 384.535  c
212.334 383.863 212.423 382.916 212.423 381.693  c
212.423 380.787 212.330 380.031 212.142 379.425  c
212.002 378.976 211.820 378.658 211.597 378.470  c
211.437 378.341 211.244 378.277 211.017 378.277  c
210.752 378.277 210.515 378.396 210.308 378.634  c
210.027 378.959 209.835 379.468 209.734 380.164  c
209.632 380.859 209.582 381.544 209.582 382.220  c
h
f
newpath
f
newpath
228.245 376.760 m
228.245 377.190 228.205 377.560 228.125 377.870  c
228.045 378.180 227.935 378.470 227.795 378.740  c
227.555 379.220 227.242 379.592 226.857 379.857  c
226.472 380.122 226.045 380.255 225.575 380.255  c
225.435 380.255 225.292 380.242 225.147 380.217  c
225.002 380.192 224.860 380.140 224.720 380.060  c
224.430 379.920 224.187 379.747 223.992 379.542  c
223.797 379.337 223.615 379.080 223.445 378.770  c
223.255 379.140 223.045 379.422 222.815 379.617  c
222.585 379.812 222.370 379.960 222.170 380.060  c
222.010 380.140 221.877 380.192 221.772 380.217  c
221.667 380.242 221.520 380.255 221.330 380.255  c
220.910 380.255 220.532 380.157 220.197 379.962  c
219.862 379.767 219.580 379.505 219.350 379.175  c
219.120 378.845 218.942 378.467 218.817 378.042  c
218.692 377.617 218.630 377.170 218.630 376.700  c
218.630 376.520 218.640 376.330 218.660 376.130  c
218.680 375.930 218.707 375.727 218.742 375.522  c
218.777 375.317 218.825 375.120 218.885 374.930  c
218.945 374.740 219.015 374.565 219.095 374.405  c
219.265 374.065 219.485 373.750 219.755 373.460  c
220.025 373.170 220.320 372.945 220.640 372.785  c
220.880 372.665 221.157 372.587 221.472 372.552  c
221.787 372.517 222.115 372.500 222.455 372.500  c
222.455 372.755 l
222.205 372.845 221.990 372.935 221.810 373.025  c
221.630 373.115 221.472 373.212 221.337 373.317  c
221.202 373.422 221.082 373.545 220.977 373.685  c
220.872 373.825 220.770 373.990 220.670 374.180  c
220.540 374.440 220.425 374.765 220.325 375.155  c
220.225 375.545 220.175 376.025 220.175 376.595  c
220.175 376.765 220.182 376.952 220.197 377.157  c
220.212 377.362 220.235 377.567 220.265 377.772  c
220.295 377.977 220.335 378.175 220.385 378.365  c
220.435 378.555 220.495 378.715 220.565 378.845  c
220.675 379.075 220.815 379.255 220.985 379.385  c
221.155 379.515 221.360 379.580 221.600 379.580  c
221.840 379.580 222.067 379.512 222.282 379.377  c
222.497 379.242 222.660 379.060 222.770 378.830  c
222.850 378.690 222.912 378.530 222.957 378.350  c
223.002 378.170 223.045 377.965 223.085 377.735  c
223.015 377.515 222.952 377.320 222.897 377.150  c
222.842 376.980 222.797 376.817 222.762 376.662  c
222.727 376.507 222.702 376.350 222.687 376.190  c
222.672 376.030 222.665 375.850 222.665 375.650  c
222.665 375.420 222.677 375.195 222.702 374.975  c
222.727 374.755 222.770 374.557 222.830 374.382  c
222.890 374.207 222.970 374.067 223.070 373.962  c
223.170 373.857 223.295 373.805 223.445 373.805  c
223.595 373.805 223.720 373.857 223.820 373.962  c
223.920 374.067 224.000 374.205 224.060 374.375  c
224.120 374.545 224.162 374.737 224.187 374.952  c
224.212 375.167 224.225 375.385 224.225 375.605  c
224.225 375.805 224.217 375.987 224.202 376.152  c
224.187 376.317 224.162 376.482 224.127 376.647  c
224.092 376.812 224.047 376.982 223.992 377.157  c
223.937 377.332 223.875 377.525 223.805 377.735  c
223.835 377.955 223.882 378.175 223.947 378.395  c
224.012 378.615 224.100 378.812 224.210 378.987  c
224.320 379.162 224.467 379.305 224.652 379.415  c
224.837 379.525 225.065 379.580 225.335 379.580  c
225.515 379.580 225.692 379.522 225.867 379.407  c
226.042 379.292 226.190 379.115 226.310 378.875  c
226.450 378.605 226.552 378.265 226.617 377.855  c
226.682 377.445 226.715 377.005 226.715 376.535  c
226.715 375.755 226.610 375.107 226.400 374.592  c
226.190 374.077 225.975 373.710 225.755 373.490  c
225.565 373.300 225.337 373.145 225.072 373.025  c
224.807 372.905 224.595 372.815 224.435 372.755  c
224.435 372.500 l
224.795 372.500 225.102 372.515 225.357 372.545  c
225.612 372.575 225.837 372.625 226.032 372.695  c
226.227 372.765 226.407 372.860 226.572 372.980  c
226.737 373.100 226.910 373.250 227.090 373.430  c
227.450 373.790 227.732 374.230 227.937 374.750  c
228.142 375.270 228.245 375.940 228.245 376.760  c
h
f
newpath
f
newpath
239.038 373.371 m
237.610 378.337 l
237.449 379.003 l
237.434 379.067 237.427 379.121 237.427 379.165  c
237.427 379.243 237.451 379.311 237.500 379.370  c
237.539 379.414 237.588 379.436 237.647 379.436  c
237.710 379.436 237.793 379.397 237.896 379.318  c
238.086 379.177 238.340 378.884 238.657 378.439  c
238.906 378.615 l
238.569 379.123 238.223 379.510 237.866 379.776  c
237.510 380.042 237.180 380.175 236.877 380.175  c
236.668 380.175 236.510 380.123 236.405 380.018  c
236.300 379.913 236.248 379.760 236.248 379.560  c
236.248 379.321 236.301 379.006 236.409 378.615  c
236.563 378.066 l
235.923 378.901 235.335 379.484 234.797 379.816  c
234.412 380.056 234.033 380.175 233.662 380.175  c
233.306 380.175 232.998 380.028 232.739 379.732  c
232.481 379.437 232.351 379.030 232.351 378.513  c
232.351 377.736 232.584 376.917 233.051 376.055  c
233.517 375.194 234.109 374.504 234.827 373.986  c
235.388 373.576 235.918 373.371 236.416 373.371  c
236.714 373.371 236.962 373.449 237.159 373.606  c
237.357 373.762 237.507 374.021 237.610 374.382  c
237.874 373.547 l
h
236.431 373.752 m
236.118 373.752 235.786 373.898 235.435 374.191  c
234.937 374.606 234.493 375.222 234.105 376.037  c
233.717 376.853 233.523 377.590 233.523 378.249  c
233.523 378.581 233.606 378.844 233.772 379.036  c
233.938 379.229 234.128 379.326 234.343 379.326  c
234.876 379.326 235.454 378.933 236.079 378.147  c
236.914 377.102 237.332 376.030 237.332 374.931  c
237.332 374.516 237.251 374.216 237.090 374.030  c
236.929 373.845 236.709 373.752 236.431 373.752  c
h
f
q
240 363 6 11 rc
newpath
249.960 368.712 m
242.040 368.712 l
242.040 368.088 l
249.960 368.088 l
h
f
Q
newpath
249.406 364.834 m
251.339 363.890 l
251.533 363.890 l
251.533 370.599 l
251.533 371.044 251.551 371.322 251.588 371.431  c
251.626 371.541 251.703 371.625 251.820 371.683  c
251.937 371.742 252.175 371.775 252.535 371.783  c
252.535 372.000 l
249.546 372.000 l
249.546 371.783 l
249.921 371.775 250.164 371.743 250.273 371.686  c
250.382 371.629 250.459 371.553 250.502 371.458  c
250.544 371.362 250.566 371.076 250.566 370.599  c
250.566 366.310 l
250.566 365.732 250.546 365.361 250.507 365.197  c
250.480 365.072 250.430 364.980 250.358 364.921  c
250.286 364.863 250.199 364.834 250.097 364.834  c
249.953 364.834 249.752 364.894 249.494 365.015  c
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
24.0000 339.000 m
24.0000 344.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
26.4697 358.747 m
26.4697 357.765 26.6178 356.920 26.9140 356.211  c
27.2102 355.502 27.6038 354.974 28.0947 354.627  c
28.4755 354.352 28.8691 354.214 29.2753 354.214  c
29.9355 354.214 30.5279 354.551 31.0527 355.224  c
31.7086 356.057 32.0366 357.187 32.0366 358.613  c
32.0366 359.612 31.8927 360.460 31.6049 361.159  c
31.3172 361.857 30.9501 362.364 30.5036 362.679  c
30.0572 362.994 29.6266 363.152 29.2119 363.152  c
28.3909 363.152 27.7075 362.667 27.1616 361.698  c
26.7003 360.882 26.4697 359.898 26.4697 358.747  c
h
27.7138 358.905 m
27.7138 360.090 27.8598 361.057 28.1518 361.806  c
28.3930 362.437 28.7527 362.752 29.2309 362.752  c
29.4594 362.752 29.6964 362.649 29.9418 362.444  c
30.1873 362.239 30.3735 361.895 30.5004 361.413  c
30.6951 360.685 30.7924 359.659 30.7924 358.334  c
30.7924 357.352 30.6909 356.533 30.4877 355.877  c
30.3354 355.391 30.1386 355.046 29.8974 354.843  c
29.7239 354.703 29.5144 354.633 29.2690 354.633  c
28.9812 354.633 28.7252 354.762 28.5009 355.021  c
28.1962 355.372 27.9889 355.924 27.8789 356.677  c
27.7688 357.431 27.7138 358.173 27.7138 358.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
98.0000 339.000 m
98.0000 344.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
90.4697 358.747 m
90.4697 357.765 90.6178 356.920 90.9140 356.211  c
91.2102 355.502 91.6038 354.974 92.0947 354.627  c
92.4755 354.352 92.8691 354.214 93.2753 354.214  c
93.9355 354.214 94.5279 354.551 95.0527 355.224  c
95.7086 356.057 96.0366 357.187 96.0366 358.613  c
96.0366 359.612 95.8927 360.460 95.6049 361.159  c
95.3172 361.857 94.9501 362.364 94.5036 362.679  c
94.0572 362.994 93.6266 363.152 93.2119 363.152  c
92.3909 363.152 91.7075 362.667 91.1616 361.698  c
90.7003 360.882 90.4697 359.898 90.4697 358.747  c
h
91.7138 358.905 m
91.7138 360.090 91.8598 361.057 92.1518 361.806  c
92.3930 362.437 92.7527 362.752 93.2309 362.752  c
93.4594 362.752 93.6964 362.649 93.9418 362.444  c
94.1873 362.239 94.3735 361.895 94.5004 361.413  c
94.6951 360.685 94.7924 359.659 94.7924 358.334  c
94.7924 357.352 94.6909 356.533 94.4877 355.877  c
94.3354 355.391 94.1386 355.046 93.8974 354.843  c
93.7239 354.703 93.5144 354.633 93.2690 354.633  c
92.9812 354.633 92.7252 354.762 92.5009 355.021  c
92.1962 355.372 91.9889 355.924 91.8789 356.677  c
91.7688 357.431 91.7138 358.173 91.7138 358.905  c
h
98.6250 361.768 m
98.8238 361.768 98.9910 361.837 99.1264 361.974  c
99.2618 362.112 99.3295 362.278 99.3295 362.473  c
99.3295 362.667 99.2608 362.833 99.1232 362.971  c
98.9857 363.109 98.8196 363.177 98.6250 363.177  c
98.4303 363.177 98.2642 363.109 98.1267 362.971  c
97.9891 362.833 97.9204 362.667 97.9204 362.473  c
97.9204 362.274 97.9891 362.107 98.1267 361.971  c
98.2642 361.836 98.4303 361.768 98.6250 361.768  c
h
100.469 358.747 m
100.469 357.765 100.617 356.920 100.914 356.211  c
101.210 355.502 101.603 354.974 102.094 354.627  c
102.475 354.352 102.869 354.214 103.275 354.214  c
103.935 354.214 104.528 354.551 105.052 355.224  c
105.708 356.057 106.036 357.187 106.036 358.613  c
106.036 359.612 105.892 360.460 105.605 361.159  c
105.317 361.857 104.950 362.364 104.503 362.679  c
104.057 362.994 103.626 363.152 103.211 363.152  c
102.391 363.152 101.707 362.667 101.161 361.698  c
100.700 360.882 100.469 359.898 100.469 358.747  c
h
101.713 358.905 m
101.713 360.090 101.859 361.057 102.151 361.806  c
102.393 362.437 102.752 362.752 103.231 362.752  c
103.459 362.752 103.696 362.649 103.941 362.444  c
104.187 362.239 104.373 361.895 104.500 361.413  c
104.695 360.685 104.792 359.659 104.792 358.334  c
104.792 357.352 104.690 356.533 104.487 355.877  c
104.335 355.391 104.138 355.046 103.897 354.843  c
103.724 354.703 103.514 354.633 103.269 354.633  c
102.981 354.633 102.725 354.762 102.501 355.021  c
102.196 355.372 101.988 355.924 101.878 356.677  c
101.768 357.431 101.713 358.173 101.713 358.905  c
h
108.523 355.236 m
110.618 354.214 l
110.827 354.214 l
110.827 361.482 l
110.827 361.965 110.847 362.265 110.887 362.384  c
110.928 362.502 111.011 362.593 111.138 362.657  c
111.265 362.720 111.523 362.756 111.913 362.765  c
111.913 363.000 l
108.675 363.000 l
108.675 362.765 l
109.082 362.756 109.344 362.721 109.462 362.660  c
109.581 362.599 109.663 362.516 109.710 362.412  c
109.757 362.309 109.780 361.999 109.780 361.482  c
109.780 356.836 l
109.780 356.210 109.759 355.808 109.716 355.630  c
109.687 355.495 109.633 355.395 109.554 355.332  c
109.476 355.268 109.382 355.236 109.272 355.236  c
109.115 355.236 108.897 355.302 108.618 355.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
172.000 339.000 m
172.000 344.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
164.469 358.747 m
164.469 357.765 164.617 356.920 164.914 356.211  c
165.210 355.502 165.603 354.974 166.094 354.627  c
166.475 354.352 166.869 354.214 167.275 354.214  c
167.935 354.214 168.528 354.551 169.052 355.224  c
169.708 356.057 170.036 357.187 170.036 358.613  c
170.036 359.612 169.892 360.460 169.605 361.159  c
169.317 361.857 168.950 362.364 168.503 362.679  c
168.057 362.994 167.626 363.152 167.211 363.152  c
166.391 363.152 165.707 362.667 165.161 361.698  c
164.700 360.882 164.469 359.898 164.469 358.747  c
h
165.713 358.905 m
165.713 360.090 165.859 361.057 166.151 361.806  c
166.393 362.437 166.752 362.752 167.231 362.752  c
167.459 362.752 167.696 362.649 167.941 362.444  c
168.187 362.239 168.373 361.895 168.500 361.413  c
168.695 360.685 168.792 359.659 168.792 358.334  c
168.792 357.352 168.690 356.533 168.487 355.877  c
168.335 355.391 168.138 355.046 167.897 354.843  c
167.724 354.703 167.514 354.633 167.269 354.633  c
166.981 354.633 166.725 354.762 166.501 355.021  c
166.196 355.372 165.988 355.924 165.878 356.677  c
165.768 357.431 165.713 358.173 165.713 358.905  c
h
172.625 361.768 m
172.823 361.768 172.991 361.837 173.126 361.974  c
173.261 362.112 173.329 362.278 173.329 362.473  c
173.329 362.667 173.260 362.833 173.123 362.971  c
172.985 363.109 172.819 363.177 172.625 363.177  c
172.430 363.177 172.264 363.109 172.126 362.971  c
171.989 362.833 171.920 362.667 171.920 362.473  c
171.920 362.274 171.989 362.107 172.126 361.971  c
172.264 361.836 172.430 361.768 172.625 361.768  c
h
174.469 358.747 m
174.469 357.765 174.617 356.920 174.914 356.211  c
175.210 355.502 175.603 354.974 176.094 354.627  c
176.475 354.352 176.869 354.214 177.275 354.214  c
177.935 354.214 178.528 354.551 179.052 355.224  c
179.708 356.057 180.036 357.187 180.036 358.613  c
180.036 359.612 179.892 360.460 179.605 361.159  c
179.317 361.857 178.950 362.364 178.503 362.679  c
178.057 362.994 177.626 363.152 177.211 363.152  c
176.391 363.152 175.707 362.667 175.161 361.698  c
174.700 360.882 174.469 359.898 174.469 358.747  c
h
175.713 358.905 m
175.713 360.090 175.859 361.057 176.151 361.806  c
176.393 362.437 176.752 362.752 177.231 362.752  c
177.459 362.752 177.696 362.649 177.941 362.444  c
178.187 362.239 178.373 361.895 178.500 361.413  c
178.695 360.685 178.792 359.659 178.792 358.334  c
178.792 357.352 178.690 356.533 178.487 355.877  c
178.335 355.391 178.138 355.046 177.897 354.843  c
177.724 354.703 177.514 354.633 177.269 354.633  c
176.981 354.633 176.725 354.762 176.501 355.021  c
176.196 355.372 175.988 355.924 175.878 356.677  c
175.768 357.431 175.713 358.173 175.713 358.905  c
h
186.960 361.343 m
186.357 363.000 l
181.279 363.000 l
181.279 362.765 l
182.773 361.402 183.824 360.289 184.434 359.426  c
185.043 358.563 185.348 357.773 185.348 357.058  c
185.348 356.512 185.181 356.064 184.846 355.712  c
184.512 355.361 184.112 355.186 183.647 355.186  c
183.223 355.186 182.844 355.309 182.507 355.557  c
182.171 355.804 181.922 356.167 181.761 356.646  c
181.526 356.646 l
181.632 355.863 181.904 355.262 182.342 354.843  c
182.780 354.424 183.327 354.214 183.983 354.214  c
184.681 354.214 185.264 354.439 185.732 354.887  c
186.199 355.336 186.433 355.865 186.433 356.474  c
186.433 356.910 186.332 357.346 186.128 357.782  c
185.815 358.467 185.307 359.193 184.605 359.959  c
183.551 361.110 182.893 361.804 182.631 362.041  c
184.878 362.041 l
185.335 362.041 185.656 362.024 185.840 361.990  c
186.024 361.956 186.190 361.888 186.338 361.784  c
186.486 361.680 186.615 361.533 186.725 361.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
246.000 339.000 m
246.000 344.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
238.469 358.747 m
238.469 357.765 238.617 356.920 238.914 356.211  c
239.210 355.502 239.603 354.974 240.094 354.627  c
240.475 354.352 240.869 354.214 241.275 354.214  c
241.935 354.214 242.528 354.551 243.052 355.224  c
243.708 356.057 244.036 357.187 244.036 358.613  c
244.036 359.612 243.892 360.460 243.605 361.159  c
243.317 361.857 242.950 362.364 242.503 362.679  c
242.057 362.994 241.626 363.152 241.211 363.152  c
240.391 363.152 239.707 362.667 239.161 361.698  c
238.700 360.882 238.469 359.898 238.469 358.747  c
h
239.713 358.905 m
239.713 360.090 239.859 361.057 240.151 361.806  c
240.393 362.437 240.752 362.752 241.231 362.752  c
241.459 362.752 241.696 362.649 241.941 362.444  c
242.187 362.239 242.373 361.895 242.500 361.413  c
242.695 360.685 242.792 359.659 242.792 358.334  c
242.792 357.352 242.690 356.533 242.487 355.877  c
242.335 355.391 242.138 355.046 241.897 354.843  c
241.724 354.703 241.514 354.633 241.269 354.633  c
240.981 354.633 240.725 354.762 240.501 355.021  c
240.196 355.372 239.988 355.924 239.878 356.677  c
239.768 357.431 239.713 358.173 239.713 358.905  c
h
246.625 361.768 m
246.823 361.768 246.991 361.837 247.126 361.974  c
247.261 362.112 247.329 362.278 247.329 362.473  c
247.329 362.667 247.260 362.833 247.123 362.971  c
246.985 363.109 246.819 363.177 246.625 363.177  c
246.430 363.177 246.264 363.109 246.126 362.971  c
245.989 362.833 245.920 362.667 245.920 362.473  c
245.920 362.274 245.989 362.107 246.126 361.971  c
246.264 361.836 246.430 361.768 246.625 361.768  c
h
248.469 358.747 m
248.469 357.765 248.617 356.920 248.914 356.211  c
249.210 355.502 249.603 354.974 250.094 354.627  c
250.475 354.352 250.869 354.214 251.275 354.214  c
251.935 354.214 252.528 354.551 253.052 355.224  c
253.708 356.057 254.036 357.187 254.036 358.613  c
254.036 359.612 253.892 360.460 253.605 361.159  c
253.317 361.857 252.950 362.364 252.503 362.679  c
252.057 362.994 251.626 363.152 251.211 363.152  c
250.391 363.152 249.707 362.667 249.161 361.698  c
248.700 360.882 248.469 359.898 248.469 358.747  c
h
249.713 358.905 m
249.713 360.090 249.859 361.057 250.151 361.806  c
250.393 362.437 250.752 362.752 251.231 362.752  c
251.459 362.752 251.696 362.649 251.941 362.444  c
252.187 362.239 252.373 361.895 252.500 361.413  c
252.695 360.685 252.792 359.659 252.792 358.334  c
252.792 357.352 252.690 356.533 252.487 355.877  c
252.335 355.391 252.138 355.046 251.897 354.843  c
251.724 354.703 251.514 354.633 251.269 354.633  c
250.981 354.633 250.725 354.762 250.501 355.021  c
250.196 355.372 249.988 355.924 249.878 356.677  c
249.768 357.431 249.713 358.173 249.713 358.905  c
h
255.660 356.030 m
255.905 355.450 256.215 355.003 256.590 354.687  c
256.964 354.372 257.431 354.214 257.989 354.214  c
258.679 354.214 259.208 354.439 259.576 354.887  c
259.856 355.222 259.995 355.579 259.995 355.960  c
259.995 356.586 259.602 357.234 258.814 357.902  c
259.343 358.110 259.743 358.406 260.014 358.791  c
260.285 359.176 260.420 359.629 260.420 360.149  c
260.420 360.894 260.183 361.540 259.710 362.085  c
259.092 362.796 258.197 363.152 257.024 363.152  c
256.445 363.152 256.050 363.080 255.841 362.936  c
255.631 362.792 255.526 362.638 255.526 362.473  c
255.526 362.350 255.576 362.242 255.676 362.149  c
255.775 362.056 255.895 362.009 256.034 362.009  c
256.140 362.009 256.248 362.026 256.358 362.060  c
256.430 362.081 256.593 362.158 256.847 362.292  c
257.101 362.425 257.276 362.504 257.374 362.530  c
257.530 362.576 257.697 362.600 257.875 362.600  c
258.307 362.600 258.682 362.432 259.002 362.098  c
259.321 361.764 259.481 361.368 259.481 360.911  c
259.481 360.577 259.407 360.251 259.259 359.934  c
259.149 359.697 259.028 359.517 258.897 359.394  c
258.715 359.225 258.465 359.071 258.148 358.934  c
257.831 358.796 257.507 358.728 257.177 358.728  c
256.974 358.728 l
256.974 358.537 l
257.308 358.495 257.643 358.374 257.980 358.175  c
258.316 357.976 258.561 357.737 258.713 357.458  c
258.865 357.179 258.941 356.872 258.941 356.538  c
258.941 356.102 258.805 355.749 258.532 355.481  c
258.259 355.212 257.919 355.078 257.513 355.078  c
256.857 355.078 256.309 355.429 255.869 356.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
320.000 339.000 m
320.000 344.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
312.469 358.747 m
312.469 357.765 312.617 356.920 312.914 356.211  c
313.210 355.502 313.603 354.974 314.094 354.627  c
314.475 354.352 314.869 354.214 315.275 354.214  c
315.935 354.214 316.528 354.551 317.052 355.224  c
317.708 356.057 318.036 357.187 318.036 358.613  c
318.036 359.612 317.892 360.460 317.605 361.159  c
317.317 361.857 316.950 362.364 316.503 362.679  c
316.057 362.994 315.626 363.152 315.211 363.152  c
314.391 363.152 313.707 362.667 313.161 361.698  c
312.700 360.882 312.469 359.898 312.469 358.747  c
h
313.713 358.905 m
313.713 360.090 313.859 361.057 314.151 361.806  c
314.393 362.437 314.752 362.752 315.231 362.752  c
315.459 362.752 315.696 362.649 315.941 362.444  c
316.187 362.239 316.373 361.895 316.500 361.413  c
316.695 360.685 316.792 359.659 316.792 358.334  c
316.792 357.352 316.690 356.533 316.487 355.877  c
316.335 355.391 316.138 355.046 315.897 354.843  c
315.724 354.703 315.514 354.633 315.269 354.633  c
314.981 354.633 314.725 354.762 314.501 355.021  c
314.196 355.372 313.988 355.924 313.878 356.677  c
313.768 357.431 313.713 358.173 313.713 358.905  c
h
320.625 361.768 m
320.823 361.768 320.991 361.837 321.126 361.974  c
321.261 362.112 321.329 362.278 321.329 362.473  c
321.329 362.667 321.260 362.833 321.123 362.971  c
320.985 363.109 320.819 363.177 320.625 363.177  c
320.430 363.177 320.264 363.109 320.126 362.971  c
319.989 362.833 319.920 362.667 319.920 362.473  c
319.920 362.274 319.989 362.107 320.126 361.971  c
320.264 361.836 320.430 361.768 320.625 361.768  c
h
322.469 358.747 m
322.469 357.765 322.617 356.920 322.914 356.211  c
323.210 355.502 323.603 354.974 324.094 354.627  c
324.475 354.352 324.869 354.214 325.275 354.214  c
325.935 354.214 326.528 354.551 327.052 355.224  c
327.708 356.057 328.036 357.187 328.036 358.613  c
328.036 359.612 327.892 360.460 327.605 361.159  c
327.317 361.857 326.950 362.364 326.503 362.679  c
326.057 362.994 325.626 363.152 325.211 363.152  c
324.391 363.152 323.707 362.667 323.161 361.698  c
322.700 360.882 322.469 359.898 322.469 358.747  c
h
323.713 358.905 m
323.713 360.090 323.859 361.057 324.151 361.806  c
324.393 362.437 324.752 362.752 325.231 362.752  c
325.459 362.752 325.696 362.649 325.941 362.444  c
326.187 362.239 326.373 361.895 326.500 361.413  c
326.695 360.685 326.792 359.659 326.792 358.334  c
326.792 357.352 326.690 356.533 326.487 355.877  c
326.335 355.391 326.138 355.046 325.897 354.843  c
325.724 354.703 325.514 354.633 325.269 354.633  c
324.981 354.633 324.725 354.762 324.501 355.021  c
324.196 355.372 323.988 355.924 323.878 356.677  c
323.768 357.431 323.713 358.173 323.713 358.905  c
h
335.049 359.826 m
335.049 360.727 l
333.894 360.727 l
333.894 363.000 l
332.846 363.000 l
332.846 360.727 l
329.203 360.727 l
329.203 359.915 l
333.195 354.214 l
333.894 354.214 l
333.894 359.826 l
h
332.846 359.826 m
332.846 355.554 l
329.825 359.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
61.0000 339.000 m
61.0000 342.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
135.000 339.000 m
135.000 342.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
209.000 339.000 m
209.000 342.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
283.000 339.000 m
283.000 342.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
357.000 339.000 m
357.000 342.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
24.0000 339.000 m
24.0000 1.00000 l
S
Q
q
q
0 J
1 j
newpath
24.0000 339.000 m
19.0000 339.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
13.4697 344.747 m
13.4697 343.765 13.6178 342.920 13.9140 342.211  c
14.2102 341.502 14.6038 340.974 15.0947 340.627  c
15.4755 340.352 15.8691 340.214 16.2753 340.214  c
16.9355 340.214 17.5279 340.551 18.0527 341.224  c
18.7086 342.057 19.0366 343.187 19.0366 344.613  c
19.0366 345.612 18.8927 346.460 18.6049 347.159  c
18.3172 347.857 17.9501 348.364 17.5036 348.679  c
17.0572 348.994 16.6266 349.152 16.2119 349.152  c
15.3909 349.152 14.7075 348.667 14.1616 347.698  c
13.7003 346.882 13.4697 345.898 13.4697 344.747  c
h
14.7138 344.905 m
14.7138 346.090 14.8598 347.057 15.1518 347.806  c
15.3930 348.437 15.7527 348.752 16.2309 348.752  c
16.4594 348.752 16.6964 348.649 16.9418 348.444  c
17.1873 348.239 17.3735 347.895 17.5004 347.413  c
17.6951 346.685 17.7924 345.659 17.7924 344.334  c
17.7924 343.352 17.6909 342.533 17.4877 341.877  c
17.3354 341.391 17.1386 341.046 16.8974 340.843  c
16.7239 340.703 16.5144 340.633 16.2690 340.633  c
15.9812 340.633 15.7252 340.762 15.5009 341.021  c
15.1962 341.372 14.9889 341.924 14.8789 342.677  c
14.7688 343.431 14.7138 344.173 14.7138 344.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
24.0000 285.000 m
19.0000 285.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
7.52343 286.236 m
9.61816 285.214 l
9.82763 285.214 l
9.82763 292.482 l
9.82763 292.965 9.84773 293.265 9.88793 293.384  c
9.92814 293.502 10.0117 293.593 10.1386 293.657  c
10.2656 293.720 10.5237 293.756 10.9130 293.765  c
10.9130 294.000 l
7.67578 294.000 l
7.67578 293.765 l
8.08203 293.756 8.34440 293.721 8.46289 293.660  c
8.58138 293.599 8.66390 293.516 8.71044 293.412  c
8.75699 293.309 8.78027 292.999 8.78027 292.482  c
8.78027 287.836 l
8.78027 287.210 8.75911 286.808 8.71679 286.630  c
8.68717 286.495 8.63321 286.395 8.55493 286.332  c
8.47664 286.268 8.38248 286.236 8.27246 286.236  c
8.11588 286.236 7.89794 286.302 7.61865 286.433  c
h
13.4697 289.747 m
13.4697 288.765 13.6178 287.920 13.9140 287.211  c
14.2102 286.502 14.6038 285.974 15.0947 285.627  c
15.4755 285.352 15.8691 285.214 16.2753 285.214  c
16.9355 285.214 17.5279 285.551 18.0527 286.224  c
18.7086 287.057 19.0366 288.187 19.0366 289.613  c
19.0366 290.612 18.8927 291.460 18.6049 292.159  c
18.3172 292.857 17.9501 293.364 17.5036 293.679  c
17.0572 293.994 16.6266 294.152 16.2119 294.152  c
15.3909 294.152 14.7075 293.667 14.1616 292.698  c
13.7003 291.882 13.4697 290.898 13.4697 289.747  c
h
14.7138 289.905 m
14.7138 291.090 14.8598 292.057 15.1518 292.806  c
15.3930 293.437 15.7527 293.752 16.2309 293.752  c
16.4594 293.752 16.6964 293.649 16.9418 293.444  c
17.1873 293.239 17.3735 292.895 17.5004 292.413  c
17.6951 291.685 17.7924 290.659 17.7924 289.334  c
17.7924 288.352 17.6909 287.533 17.4877 286.877  c
17.3354 286.391 17.1386 286.046 16.8974 285.843  c
16.7239 285.703 16.5144 285.633 16.2690 285.633  c
15.9812 285.633 15.7252 285.762 15.5009 286.021  c
15.1962 286.372 14.9889 286.924 14.8789 287.677  c
14.7688 288.431 14.7138 289.173 14.7138 289.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
24.0000 231.000 m
19.0000 231.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
11.9604 238.343 m
11.3574 240.000 l
6.27929 240.000 l
6.27929 239.765 l
7.77311 238.402 8.82470 237.289 9.43408 236.426  c
10.0434 235.563 10.3481 234.773 10.3481 234.058  c
10.3481 233.512 10.1809 233.064 9.84668 232.712  c
9.51237 232.361 9.11246 232.186 8.64697 232.186  c
8.22379 232.186 7.84399 232.309 7.50756 232.557  c
7.17114 232.804 6.92252 233.167 6.76171 233.646  c
6.52685 233.646 l
6.63265 232.863 6.90454 232.262 7.34252 231.843  c
7.78051 231.424 8.32747 231.214 8.98339 231.214  c
9.68164 231.214 10.2645 231.439 10.7321 231.887  c
11.1997 232.336 11.4335 232.865 11.4335 233.474  c
11.4335 233.910 11.3320 234.346 11.1289 234.782  c
10.8157 235.467 10.3079 236.193 9.60546 236.959  c
8.55175 238.110 7.89371 238.804 7.63134 239.041  c
9.87841 239.041 l
10.3354 239.041 10.6560 239.024 10.8400 238.990  c
11.0241 238.956 11.1902 238.888 11.3383 238.784  c
11.4864 238.680 11.6155 238.533 11.7255 238.343  c
h
13.4697 235.747 m
13.4697 234.765 13.6178 233.920 13.9140 233.211  c
14.2102 232.502 14.6038 231.974 15.0947 231.627  c
15.4755 231.352 15.8691 231.214 16.2753 231.214  c
16.9355 231.214 17.5279 231.551 18.0527 232.224  c
18.7086 233.057 19.0366 234.187 19.0366 235.613  c
19.0366 236.612 18.8927 237.460 18.6049 238.159  c
18.3172 238.857 17.9501 239.364 17.5036 239.679  c
17.0572 239.994 16.6266 240.152 16.2119 240.152  c
15.3909 240.152 14.7075 239.667 14.1616 238.698  c
13.7003 237.882 13.4697 236.898 13.4697 235.747  c
h
14.7138 235.905 m
14.7138 237.090 14.8598 238.057 15.1518 238.806  c
15.3930 239.437 15.7527 239.752 16.2309 239.752  c
16.4594 239.752 16.6964 239.649 16.9418 239.444  c
17.1873 239.239 17.3735 238.895 17.5004 238.413  c
17.6951 237.685 17.7924 236.659 17.7924 235.334  c
17.7924 234.352 17.6909 233.533 17.4877 232.877  c
17.3354 232.391 17.1386 232.046 16.8974 231.843  c
16.7239 231.703 16.5144 231.633 16.2690 231.633  c
15.9812 231.633 15.7252 231.762 15.5009 232.021  c
15.1962 232.372 14.9889 232.924 14.8789 233.677  c
14.7688 234.431 14.7138 235.173 14.7138 235.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
24.0000 177.000 m
19.0000 177.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.66015 179.030 m
6.90559 178.450 7.21557 178.003 7.59008 177.687  c
7.96460 177.372 8.43115 177.214 8.98974 177.214  c
9.67952 177.214 10.2085 177.439 10.5766 177.887  c
10.8559 178.222 10.9956 178.579 10.9956 178.960  c
10.9956 179.586 10.6020 180.234 9.81494 180.902  c
10.3439 181.110 10.7438 181.406 11.0146 181.791  c
11.2854 182.176 11.4209 182.629 11.4209 183.149  c
11.4209 183.894 11.1839 184.540 10.7099 185.085  c
10.0921 185.796 9.19710 186.152 8.02490 186.152  c
7.44515 186.152 7.05053 186.080 6.84106 185.936  c
6.63159 185.792 6.52685 185.638 6.52685 185.473  c
6.52685 185.350 6.57657 185.242 6.67602 185.149  c
6.77547 185.056 6.89502 185.009 7.03466 185.009  c
7.14046 185.009 7.24837 185.026 7.35839 185.060  c
7.43033 185.081 7.59326 185.158 7.84716 185.292  c
8.10107 185.425 8.27669 185.504 8.37402 185.530  c
8.53059 185.576 8.69775 185.600 8.87548 185.600  c
9.30712 185.600 9.68269 185.432 10.0022 185.098  c
10.3217 184.764 10.4814 184.368 10.4814 183.911  c
10.4814 183.577 10.4073 183.251 10.2592 182.934  c
10.1492 182.697 10.0286 182.517 9.89746 182.394  c
9.71549 182.225 9.46582 182.071 9.14843 181.934  c
8.83105 181.796 8.50732 181.728 8.17724 181.728  c
7.97412 181.728 l
7.97412 181.537 l
8.30843 181.495 8.64379 181.374 8.98022 181.175  c
9.31665 180.976 9.56103 180.737 9.71337 180.458  c
9.86572 180.179 9.94189 179.872 9.94189 179.538  c
9.94189 179.102 9.80542 178.749 9.53247 178.481  c
9.25952 178.212 8.91992 178.078 8.51367 178.078  c
7.85774 178.078 7.30973 178.429 6.86962 179.131  c
h
13.4697 181.747 m
13.4697 180.765 13.6178 179.920 13.9140 179.211  c
14.2102 178.502 14.6038 177.974 15.0947 177.627  c
15.4755 177.352 15.8691 177.214 16.2753 177.214  c
16.9355 177.214 17.5279 177.551 18.0527 178.224  c
18.7086 179.057 19.0366 180.187 19.0366 181.613  c
19.0366 182.612 18.8927 183.460 18.6049 184.159  c
18.3172 184.857 17.9501 185.364 17.5036 185.679  c
17.0572 185.994 16.6266 186.152 16.2119 186.152  c
15.3909 186.152 14.7075 185.667 14.1616 184.698  c
13.7003 183.882 13.4697 182.898 13.4697 181.747  c
h
14.7138 181.905 m
14.7138 183.090 14.8598 184.057 15.1518 184.806  c
15.3930 185.437 15.7527 185.752 16.2309 185.752  c
16.4594 185.752 16.6964 185.649 16.9418 185.444  c
17.1873 185.239 17.3735 184.895 17.5004 184.413  c
17.6951 183.685 17.7924 182.659 17.7924 181.334  c
17.7924 180.352 17.6909 179.533 17.4877 178.877  c
17.3354 178.391 17.1386 178.046 16.8974 177.843  c
16.7239 177.703 16.5144 177.633 16.2690 177.633  c
15.9812 177.633 15.7252 177.762 15.5009 178.021  c
15.1962 178.372 14.9889 178.924 14.8789 179.677  c
14.7688 180.431 14.7138 181.173 14.7138 181.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
24.0000 122.000 m
19.0000 122.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
12.0493 128.826 m
12.0493 129.727 l
10.8940 129.727 l
10.8940 132.000 l
9.84668 132.000 l
9.84668 129.727 l
6.20312 129.727 l
6.20312 128.915 l
10.1958 123.214 l
10.8940 123.214 l
10.8940 128.826 l
h
9.84668 128.826 m
9.84668 124.554 l
6.82519 128.826 l
h
13.4697 127.747 m
13.4697 126.765 13.6178 125.920 13.9140 125.211  c
14.2102 124.502 14.6038 123.974 15.0947 123.627  c
15.4755 123.352 15.8691 123.214 16.2753 123.214  c
16.9355 123.214 17.5279 123.551 18.0527 124.224  c
18.7086 125.057 19.0366 126.187 19.0366 127.613  c
19.0366 128.612 18.8927 129.460 18.6049 130.159  c
18.3172 130.857 17.9501 131.364 17.5036 131.679  c
17.0572 131.994 16.6266 132.152 16.2119 132.152  c
15.3909 132.152 14.7075 131.667 14.1616 130.698  c
13.7003 129.882 13.4697 128.898 13.4697 127.747  c
h
14.7138 127.905 m
14.7138 129.090 14.8598 130.057 15.1518 130.806  c
15.3930 131.437 15.7527 131.752 16.2309 131.752  c
16.4594 131.752 16.6964 131.649 16.9418 131.444  c
17.1873 131.239 17.3735 130.895 17.5004 130.413  c
17.6951 129.685 17.7924 128.659 17.7924 127.334  c
17.7924 126.352 17.6909 125.533 17.4877 124.877  c
17.3354 124.391 17.1386 124.046 16.8974 123.843  c
16.7239 123.703 16.5144 123.633 16.2690 123.633  c
15.9812 123.633 15.7252 123.762 15.5009 124.021  c
15.1962 124.372 14.9889 124.924 14.8789 125.677  c
14.7688 126.431 14.7138 127.173 14.7138 127.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
24.0000 68.0000 m
19.0000 68.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
11.6430 69.3925 m
11.1479 70.4716 l
8.55810 70.4716 l
7.99316 71.6269 l
9.11458 71.7919 10.0032 72.2088 10.6591 72.8774  c
11.2220 73.4529 11.5034 74.1300 11.5034 74.9086  c
11.5034 75.3614 11.4113 75.7804 11.2272 76.1655  c
11.0432 76.5506 10.8115 76.8785 10.5322 77.1494  c
10.2529 77.4202 9.94189 77.6381 9.59912 77.8032  c
9.11246 78.0359 8.61311 78.1523 8.10107 78.1523  c
7.58479 78.1523 7.20922 78.0645 6.97436 77.8889  c
6.73950 77.7133 6.62207 77.5196 6.62207 77.3081  c
6.62207 77.1896 6.67073 77.0848 6.76806 76.9939  c
6.86539 76.9029 6.98811 76.8574 7.13623 76.8574  c
7.24625 76.8574 7.34252 76.8743 7.42504 76.9082  c
7.50756 76.9420 7.64827 77.0288 7.84716 77.1684  c
8.16455 77.3885 8.48616 77.4985 8.81201 77.4985  c
9.30712 77.4985 9.74194 77.3112 10.1164 76.9367  c
10.4909 76.5622 10.6782 76.1062 10.6782 75.5688  c
10.6782 75.0483 10.5110 74.5627 10.1767 74.1120  c
9.84244 73.6613 9.38118 73.3133 8.79296 73.0678  c
8.33170 72.8774 7.70328 72.7674 6.90771 72.7377  c
8.55810 69.3925 l
h
13.4697 73.7470 m
13.4697 72.7653 13.6178 71.9200 13.9140 71.2111  c
14.2102 70.5023 14.6038 69.9744 15.0947 69.6274  c
15.4755 69.3523 15.8691 69.2148 16.2753 69.2148  c
16.9355 69.2148 17.5279 69.5512 18.0527 70.2241  c
18.7086 71.0577 19.0366 72.1876 19.0366 73.6137  c
19.0366 74.6124 18.8927 75.4609 18.6049 76.1591  c
18.3172 76.8574 17.9501 77.3641 17.5036 77.6794  c
17.0572 77.9947 16.6266 78.1523 16.2119 78.1523  c
15.3909 78.1523 14.7075 77.6678 14.1616 76.6987  c
13.7003 75.8820 13.4697 74.8981 13.4697 73.7470  c
h
14.7138 73.9057 m
14.7138 75.0906 14.8598 76.0576 15.1518 76.8066  c
15.3930 77.4371 15.7527 77.7524 16.2309 77.7524  c
16.4594 77.7524 16.6964 77.6498 16.9418 77.4445  c
17.1873 77.2393 17.3735 76.8955 17.5004 76.4130  c
17.6951 75.6852 17.7924 74.6590 17.7924 73.3344  c
17.7924 72.3527 17.6909 71.5338 17.4877 70.8779  c
17.3354 70.3912 17.1386 70.0463 16.8974 69.8432  c
16.7239 69.7036 16.5144 69.6337 16.2690 69.6337  c
15.9812 69.6337 15.7252 69.7628 15.5009 70.0210  c
15.1962 70.3722 14.9889 70.9244 14.8789 71.6777  c
14.7688 72.4309 14.7138 73.1736 14.7138 73.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
24.0000 14.0000 m
19.0000 14.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
11.8271 15.2148 m
11.8271 15.4497 l
11.2685 15.5047 10.8125 15.6158 10.4592 15.7829  c
10.1058 15.9501 9.75675 16.2050 9.41186 16.5478  c
9.06697 16.8906 8.78133 17.2725 8.55493 17.6936  c
8.32853 18.1146 8.13916 18.6150 7.98681 19.1948  c
8.59619 18.7758 9.20768 18.5664 9.82128 18.5664  c
10.4095 18.5664 10.9194 18.8033 11.3510 19.2773  c
11.7827 19.7513 11.9985 20.3606 11.9985 21.1054  c
11.9985 21.8248 11.7806 22.4807 11.3447 23.0732  c
10.8199 23.7926 10.1259 24.1523 9.26269 24.1523  c
8.67447 24.1523 8.17513 23.9576 7.76464 23.5683  c
6.96061 22.8108 6.55859 21.8291 6.55859 20.6230  c
6.55859 19.8528 6.71305 19.1207 7.02197 18.4267  c
7.33089 17.7327 7.77205 17.1170 8.34545 16.5795  c
8.91886 16.0421 9.46793 15.6803 9.99267 15.4941  c
10.5174 15.3079 11.0061 15.2148 11.4589 15.2148  c
h
7.87890 19.6582 m
7.80273 20.2294 7.76464 20.6907 7.76464 21.0419  c
7.76464 21.4482 7.83976 21.8894 7.98999 22.3654  c
8.14021 22.8415 8.36344 23.2192 8.65966 23.4985  c
8.87548 23.6974 9.13785 23.7968 9.44677 23.7968  c
9.81494 23.7968 10.1439 23.6233 10.4338 23.2763  c
10.7237 22.9293 10.8686 22.4342 10.8686 21.7910  c
10.8686 21.0673 10.7247 20.4410 10.4370 19.9121  c
10.1492 19.3831 9.74088 19.1186 9.21191 19.1186  c
9.05110 19.1186 8.87866 19.1525 8.69458 19.2202  c
8.51049 19.2879 8.23860 19.4339 7.87890 19.6582  c
h
13.4697 19.7470 m
13.4697 18.7653 13.6178 17.9200 13.9140 17.2111  c
14.2102 16.5023 14.6038 15.9744 15.0947 15.6274  c
15.4755 15.3523 15.8691 15.2148 16.2753 15.2148  c
16.9355 15.2148 17.5279 15.5512 18.0527 16.2241  c
18.7086 17.0577 19.0366 18.1876 19.0366 19.6137  c
19.0366 20.6124 18.8927 21.4609 18.6049 22.1591  c
18.3172 22.8574 17.9501 23.3641 17.5036 23.6794  c
17.0572 23.9947 16.6266 24.1523 16.2119 24.1523  c
15.3909 24.1523 14.7075 23.6678 14.1616 22.6987  c
13.7003 21.8820 13.4697 20.8981 13.4697 19.7470  c
h
14.7138 19.9057 m
14.7138 21.0906 14.8598 22.0576 15.1518 22.8066  c
15.3930 23.4371 15.7527 23.7524 16.2309 23.7524  c
16.4594 23.7524 16.6964 23.6498 16.9418 23.4445  c
17.1873 23.2393 17.3735 22.8955 17.5004 22.4130  c
17.6951 21.6852 17.7924 20.6590 17.7924 19.3344  c
17.7924 18.3527 17.6909 17.5338 17.4877 16.8779  c
17.3354 16.3912 17.1386 16.0463 16.8974 15.8432  c
16.7239 15.7036 16.5144 15.6337 16.2690 15.6337  c
15.9812 15.6337 15.7252 15.7628 15.5009 16.0210  c
15.1962 16.3722 14.9889 16.9244 14.8789 17.6777  c
14.7688 18.4309 14.7138 19.1736 14.7138 19.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
24.0000 312.000 m
21.0000 312.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
24.0000 258.000 m
21.0000 258.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
24.0000 204.000 m
21.0000 204.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
24.0000 149.000 m
21.0000 149.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
24.0000 95.0000 m
21.0000 95.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
24.0000 41.0000 m
21.0000 41.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
